{"version":3,"sources":["components/Header.js","components/Landing.js","components/requireAuth.js","actions/index.js","components/ReminderItem.js","actions/types.js","components/ReminderList.js","components/Dashboard.js","utils/helpers.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/ReminderForm.js","components/App.js","reducers/authReducer.js","reducers/remindersReducer.js","reducers/index.js","index.js"],"names":["Header","token","useSelector","state","auth","className","style","marginLeft","to","marginRight","Landing","ChildComponent","withRouter","props","history","useHistory","useEffect","push","getToken","localStorage","getItem","ReminderItem","reminder","dispatch","useDispatch","reminderText","text","reminderDate","moment","due","format","reminderTime","useState","edit","setEdit","setText","date","setDate","time","setTime","type","value","onChange","e","target","onClick","updated","id","_id","a","axios","put","headers","authorization","res","payload","data","updateReminder","disabled","formatDate","delete","params","ReminderList","reminders","firstName","remindersLink","length","map","key","requireAuth","get","margin","width","validateEmail","email","test","toLowerCase","SignUp","onSubmit","formProps","callback","post","setItem","signUp","validate","values","phone","errors","password","confirm","render","handleSubmit","form","submitting","pristine","name","input","meta","placeholder","error","touched","reset","SignIn","signIn","SignOut","removeItem","createReminder","App","marginTop","exact","path","component","Dashboard","ReminderForm","INITIAL_STATE","action","_","sortBy","orderBy","filter","appReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.20468a73.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  // check if token exists\n  const token = useSelector(state => state.auth.token);\n\n  const renderLinks = () => {\n    // if user is authorized\n    if (token) {\n      // render 'new reminder' and 'sign out' links\n      return (\n        <div>\n          <li>\n            <Link to=\"/reminders/new\">New Reminder</Link>\n          </li>\n          <li>\n            <Link to=\"/signout\">Sign Out</Link>\n          </li>\n        </div>\n      )\n    // if user is not authorized\n    } else {\n      // render 'sign up' and 'sign in' links\n      return (\n        <div>\n          <li>\n            <Link to=\"/signup\">Sign Up</Link>\n          </li>\n          <li>\n            <Link to=\"/signin\">Sign In</Link>\n          </li>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"navbar-fixed\">\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link \n            className=\"brand-logo left\" \n            style={{marginLeft: \"24px\"}}\n            to={token ? '/dashboard' : '/'}\n          >\n            Remind.me\n          </Link>\n          <ul\n            className=\"right\"\n            style={{marginRight: \"24px\"}}>\n            {renderLinks()}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\n\n// landing page when initially loaded\nconst Landing = () => {\n  return (\n    <div>\n      <h1>Remind.me</h1>\n      Keep track of what matters most.\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, withRouter } from 'react-router-dom';\n\n// component wrapper to redirect to '/' if user is not authenticated\nexport default ChildComponent => {\n  const ComposedComponent = props => {\n    // check if token exists\n    const token = useSelector(state => state.auth.token);\n    const history = useHistory();\n\n    const shouldNavigateAway = () => {\n      // if no token, redirect\n      if (!token) {\n        history.push('/');\n      }\n    };\n\n    useEffect(() => {\n      shouldNavigateAway();\n    });\n\n    return(\n      <ChildComponent {...props} />\n    );\n  }\n\n  return withRouter(ComposedComponent);\n};\n","import axios from 'axios';\n\nimport {\n  USER_SIGNED_UP,\n  USER_SIGNED_IN,\n  USER_SIGNED_OUT,\n  REMINDER_CREATED,\n  REMINDER_DELETED,\n  REMINDER_UPDATED,\n  REMINDERS_FETCHED,\n  ERROR_RECEIVED\n} from './types';\n\n// NOTE: all jwt routes must include the authorization header with the stored token\n\nconst getToken = () => {\n  // return locally stored token\n  return localStorage.getItem('token');\n};\n\n// api call to sign up new user\n// send new user data to auth reducer\nexport const signUp = (formProps, callback) => async dispatch => {\n  try {\n    const res = await axios.post('/auth/signup', formProps);\n\n    dispatch({ type: USER_SIGNED_UP, payload: res.data });\n    localStorage.setItem('token', res.data.token);\n    callback();\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'User already exists'});\n  }\n};\n\n// api call to sign in new user\n// send user data to auth reducer\nexport const signIn = (formProps, callback) => async dispatch => {\n  try {\n    const res = await axios.post('/auth/signin', formProps);\n\n    dispatch({ type: USER_SIGNED_IN, payload: res.data });\n    localStorage.setItem('token', res.data.token);\n    callback();\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'Invalid login' });\n  }\n};\n\n// remove locally stored token and trigger callback\n// send empty payload to auth reducer\nexport const signOut = callback => {\n  localStorage.removeItem('token');\n  callback();\n\n  return {\n    type: USER_SIGNED_OUT,\n    payload: ''\n  };\n};\n\n// api call to fetch all reminders for current user\n// send reminders to reminder reducer\nexport const getReminders = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/reminders', {\n      headers: { authorization: getToken() }\n    });\n\n    dispatch({ type: REMINDERS_FETCHED, payload: res.data });\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'Could not fetch reminders' });\n  }\n};\n\n// api call to fetch all reminders for current user\n// send reminders to reminder reducer\nexport const createReminder = (formProps, callback) => async dispatch => {\n  try {\n    const res = await axios.post('/api/reminders', formProps, {\n      headers: { authorization: getToken() }\n    });\n\n    dispatch({ type: REMINDER_CREATED, payload: res.data });\n    callback();\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'Could not create reminder' });\n  }\n};\n\n// api call to update reminder\n// send updated reminder to reminder reducer\nexport const updateReminder = reminder => async dispatch => {\n  try {\n    const res = await axios.put('/api/reminders', reminder, {\n      headers: { authorization: getToken() }\n    });\n\n    dispatch({ type: REMINDER_UPDATED, payload: res.data });\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'Could not update reminder' });\n  }\n};\n\n// api call to delete reminder with given id\n// send id to reminder reducer\nexport const deleteReminder = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/reminders', {\n      params: { id: id },\n      headers: { authorization: getToken() }\n    });\n    \n    dispatch({ type: REMINDER_DELETED, payload: id });\n  } catch (err) {\n    dispatch({ type: ERROR_RECEIVED, payload: 'Could not delete reminder' });\n  }\n};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { updateReminder, deleteReminder } from '../actions';\n\nconst formatDate = date => {\n  // format date as string\n  return moment(date).format(\"dddd, MMMM Do YYYY, h:mm A\");\n};\n\nconst ReminderItem = ({ reminder }) => {\n  const dispatch = useDispatch();\n  // store initial values\n  const reminderText = reminder.text;\n  // break stored date into date value\n  const reminderDate = moment(reminder.due).format(\"YYYY-MM-DD\");\n  // break stored date into time value\n  const reminderTime = moment(reminder.due).format(\"HH:mm\");\n\n  // initialize local state with reminder values\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState(reminderText);\n  const [date, setDate] = useState(reminderDate);\n  const [time, setTime] = useState(reminderTime);\n\n  const handleEdit = () => {\n    setEdit(true);\n  };\n\n  const handleDelete = () => {\n    // trigger reminder delete\n    dispatch(deleteReminder(reminder._id));\n  };\n\n  const handleCancel = () => {\n    // reset to initial values\n    setText(reminderText);\n    setDate(reminderDate);\n    setTime(reminderTime);\n    setEdit(false);\n  };\n\n  const handleSave = () => {\n    const updated = {\n      id: reminder._id,\n      text,\n      date,\n      time\n    };\n    // trigger reminder updated\n    dispatch(updateReminder(updated));\n    setEdit(false);\n  };\n\n  return (\n    <div>\n      {\n        // if item is in edit mode\n        edit ? (\n          // render inputs\n          // set local state values upon each change\n          <div>\n            <input \n              type=\"text\" \n              value={text} \n              onChange={e => setText(e.target.value)}\n            />\n            <input \n              type=\"date\" \n              value={date} \n              onChange={e => setDate(e.target.value)}/>\n            <input \n              type=\"time\" \n              value={time} \n              onChange={e => setTime(e.target.value)}/>\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn-flat\" \n              onClick={handleSave}\n              disabled={!text || !date || !time}>\n              <i className=\"material-icons\">\n                save\n              </i>\n            </button>\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn-flat\" \n              onClick={handleCancel}\n              disabled={!text || !date || !time}>\n              <i className=\"material-icons\">\n                cancel\n              </i>\n            </button>\n          </div>\n        ) : (\n          // if not in edit mode, display reminder data\n          <div>\n            <h5 className=\"title\">{reminder.text}</h5>\n            <p>{formatDate(reminder.due)}</p>\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn-flat\" \n              onClick={handleEdit}>\n              <i className=\"material-icons\">\n                edit\n              </i>\n            </button>\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn-flat\" \n              onClick={handleDelete}>\n              <i className=\"material-icons\">\n                delete_forever\n              </i>\n            </button>\n          </div>\n        )\n      }\n    </div>\n  )\n};\n\nexport default ReminderItem;\n","export const USER_SIGNED_UP = '/user/signed_up';\nexport const USER_SIGNED_IN = '/user/signed_in';\nexport const USER_SIGNED_OUT = '/user/signed_out';\n\nexport const REMINDER_CREATED = 'reminder/created';\nexport const REMINDER_DELETED = 'reminder/deleted';\nexport const REMINDER_UPDATED = 'reminder/updated';\nexport const REMINDERS_FETCHED = 'reminder/fetched';\n\nexport const ERROR_RECEIVED = 'error/received';","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ReminderItem from './ReminderItem';\n\nconst ReminderList = () => {\n  // get reminders from state\n  const reminders = useSelector(state => state.reminders);\n  // get user's name from state\n  const firstName = useSelector(state => state.auth.firstName);\n\n  const remindersLink = <Link className=\"waves-effect waves-light btn\" to=\"/reminders/new\">New Reminder</Link>;\n  return (\n    <div>\n      {\n        // if user has reminders\n        reminders.length ? (\n          // render reminder collection\n          <div>\n            <h4>\n            { firstName ? `${firstName}'s Reminders` : '' }\n            </h4>\n            <ul className=\"collection\">\n              {reminders.map(reminder =>\n                <li key={reminder._id} className=\"collection-item\">\n                  <ReminderItem reminder={reminder} />\n                </li>\n              )}\n            </ul>\n          </div>\n        ) : (\n          // if not, prompt user to create first reminder\n          <div>\n            <h4>Create your first reminder!</h4>\n            {remindersLink}\n          </div>\n          \n        )\n      }\n    </div>\n    \n    \n  );\n};\n\nexport default ReminderList;","import React, { useEffect } from 'react';\nimport requireAuth from './requireAuth';\nimport { useDispatch } from 'react-redux';\nimport ReminderList from './ReminderList';\nimport { getReminders } from '../actions';\n\nconst Dashboard = () => {\n  // upon load, fetch reminders for current user\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getReminders());\n  });\n\n  return (\n    <div style={{margin: \"0 auto 0 auto\", width: \"70%\"}}>\n      <ReminderList />\n    </div>\n  );\n};\n\nexport default requireAuth(Dashboard);\n","export const validateEmail = email => {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email.toLowerCase());\n};\n\nexport const validatePhone = phone => {\n  const re = /^\\(?[\\d]{3}\\)?[\\s-]?[\\d]{3}[\\s-]?[\\d]{4}$/;\n  return re.test(phone);\n};","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signUp } from '../../actions';\nimport { validateEmail, validatePhone } from '../../utils/helpers';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // trigger user sign in upon form submit\n  const onFormSubmit = formProps => {\n    dispatch(signUp(formProps, () => {\n      // if successful, navigate to dashboard\n      history.push('/dashboard');\n    }));\n  };\n\n  return (\n    <div style={{margin: \"0 auto 0 auto\", width: \"50%\"}}>\n      <Form\n        onSubmit={onFormSubmit}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!validateEmail(values.email)) {\n            errors.email = 'Not a valid email address';\n          }\n          if (!values.password) {\n            errors.password = 'Required';\n          }\n          if (!values.confirm) {\n            errors.confirm = 'Required';\n          } else if (values.confirm !== values.password) {\n            errors.confirm = 'Password must match';\n          }\n          if (!values.phone) {\n            errors.phone = 'Required';\n          } else if (!validatePhone(values.phone)) {\n            errors.phone = 'Not a valid phone number';\n          }\n          return errors\n        }}\n        render={({ handleSubmit, form, submitting, pristine }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"firstName\">\n              {({ input, meta }) => (\n                <div>\n                  <label>First Name</label>\n                  <input {...input} type=\"text\" placeholder=\"First Name\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"email\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Email</label>\n                  <input {...input} type=\"text\" placeholder=\"Email\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"password\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input {...input} type=\"password\" placeholder=\"Password\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"confirm\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Confirm Password</label>\n                  <input {...input} type=\"password\" placeholder=\"Confirm\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"phone\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Phone (to receive SMS message)</label>\n                  <input {...input} type=\"tel\" placeholder=\"555-555-5555\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className=\"buttons\">\n              <button \n                type=\"submit\" \n                className=\"waves-effect waves-light btn\" \n                disabled={submitting}>\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"waves-effect waves-light btn-flat\"\n                onClick={form.reset}\n                disabled={submitting || pristine}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default SignUp;\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signIn } from '../../actions';\nimport { validateEmail } from '../../utils/helpers';\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // trigger user sign in upon form submit\n  const onFormSubmit = formProps => {\n    dispatch(signIn(formProps, () => {\n      // if successful, navigate to dashboard\n      history.push('/dashboard');\n    }));\n  };\n\n  return (\n    <div style={{margin: \"0 auto 0 auto\", width: \"50%\"}}>\n      <Form\n        onSubmit={onFormSubmit}\n        validate={values => {\n          const errors = {}\n          if (!values.email) {\n            errors.email = 'Required'\n          } else if (!validateEmail(values.email)) {\n            errors.email = 'Not a valid email address'\n          }\n          if (!values.password) {\n            errors.password = 'Required'\n          }\n          return errors\n        }}\n        render={({ handleSubmit, form, submitting, pristine }) => (\n          <form onSubmit={handleSubmit}>\n            <Field\n              name=\"email\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Email</label>\n                  <input {...input} type=\"text\" placeholder=\"Email\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"password\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input {...input} type=\"password\" placeholder=\"Password\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className=\"buttons\">\n              <button \n                type=\"submit\" \n                className=\"waves-effect waves-light btn\" \n                disabled={submitting}>\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"waves-effect waves-light btn-flat\" \n                onClick={form.reset}\n                disabled={submitting || pristine}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default SignIn;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signOut } from '../../actions';\n\nconst SignOut = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // upon load, trigger sign out\n  useEffect(() => {\n    dispatch(signOut(() => {\n      // if successful, navigate to landing page\n      history.push('/');\n    }));\n  });\n\n  return (\n    <div>See you next time!</div>\n  )\n}\n\nexport default SignOut;\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createReminder } from '../actions';\nimport requireAuth from './requireAuth';\n\nconst ReminderForm = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // trigger reminder creation upon form submit\n  const onFormSubmit = formProps => {\n    dispatch(createReminder(formProps, () => {\n      // if successful, navigate to dashboard\n      history.push('/dashboard');\n    }));\n  };\n\n  return (\n    <div style={{margin: \"0 auto 0 auto\", width: \"70%\"}}>\n      <Form\n        onSubmit={onFormSubmit}\n        // validate form values\n        validate={values => {\n          const errors = {};\n          if (!values.text) {\n            errors.text = 'Required'\n          }\n          if (!values.date) {\n            errors.date = 'Required'\n          }\n          if (!values.time) {\n            errors.time = 'Required'\n          }\n          return errors;\n        }}\n        render={({ handleSubmit, submitting }) => (\n          <form onSubmit={handleSubmit}>\n            <Field\n              name=\"text\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Reminder Text</label>\n                  <input {...input} type=\"text\" placeholder=\"Remember to...\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"date\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Due Date</label>\n                  <input {...input} \n                    type=\"date\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field\n              name=\"time\"\n            >\n              {({ input, meta }) => (\n                <div>\n                  <label>Reminder Time</label>\n                  <input {...input} \n                    type=\"time\" \n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className=\"buttons\">\n              <button \n                type=\"submit\" \n                className=\"waves-effect waves-light btn\" \n                disabled={submitting}>\n                Submit\n              </button>\n              <Link \n                className=\"waves-effect waves-light btn-flat\" \n                to=\"/dashboard\">\n                Cancel\n              </Link>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default requireAuth(ReminderForm);","import React  from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport SignUp from './auth/SignUp';\nimport SignIn from './auth/SignIn';\nimport SignOut from './auth/SignOut';\nimport ReminderForm from './ReminderForm';\n\n// upon load, fetch current user\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <nav>\n          <Header />\n        </nav>\n        <main className=\"container\" style={{marginTop: \"24px\"}}>\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/signout\" component={SignOut} />\n          <Route exact path=\"/reminders/new\" component={ReminderForm} />\n        </main>\n      </BrowserRouter>\n    </div>\n  )\n};\n\nexport default App;","import {  \n  USER_SIGNED_UP, \n  USER_SIGNED_IN, \n  USER_SIGNED_OUT,\n  ERROR_RECEIVED\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  token: '',\n  error: '',\n  firstName: ''\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case USER_SIGNED_UP:\n    case USER_SIGNED_IN:\n      // update token with jwt, update user's name\n      return { token: action.payload.token, error: '', firstName: action.payload.firstName };\n    case USER_SIGNED_OUT:\n      // clear out auth data\n      return { token: action.payload, error: '', firstName: '' };\n    case ERROR_RECEIVED:\n      // update error\n      return { ...state, error: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import _ from 'lodash';\nimport {\n  REMINDERS_FETCHED,\n  REMINDER_CREATED,\n  REMINDER_DELETED,\n  REMINDER_UPDATED\n} from '../actions/types';\n\nconst INITIAL_STATE = [];\n\nconst reminders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REMINDERS_FETCHED:\n      // sort by due date\n      return _.sortBy(action.payload, ['due']);\n    case REMINDER_CREATED:\n      // add new reminder and sort by due date\n      return _.sortBy(\n        [ ...state, action.payload], \n      ['due']);\n    case REMINDER_DELETED:\n      // remove deleted reminder and sort by due date\n      return _.orderBy(\n        _.filter(state, reminder => (\n            reminder._id !== action.payload\n        )), \n      ['due']);\n    case REMINDER_UPDATED:\n      // update reminder and sort by due date\n      return _.sortBy(\n        _.map(state, reminder => (\n          reminder._id === action.payload._id ?\n          action.payload :\n          reminder\n        )),\n      ['due']);\n    default:\n      return state;\n  }\n};\n\nexport default reminders;","import { combineReducers } from 'redux';\nimport auth from './authReducer';\nimport reminders from './remindersReducer';\n\nconst appReducer = combineReducers({\n  auth,\n  reminders\n});\n\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// intiialize with jwt if available\nconst store = createStore(\n  reducers,\n  {\n    auth: {\n      token: localStorage.getItem('token')\n    }\n  },\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}